{"version":3,"sources":["style/searchStyle.module.css","images/playstore.png","components/nav/AppHeader.jsx","Config.jsx","components/search/SearchPage.jsx","components/redux/stations/stationActions.js","components/redux/stations/stationActionTypes.js","components/redux/pendingChanges/pendingChangesActions.js","components/redux/pendingChanges/pendingChangesActionTypes.js","components/list/StationList.jsx","components/auth/GoogleAuth.js","components/redux/user/userActions.js","components/redux/user/userActionTypes.js","components/NewTrain.jsx","utils/utils.jsx","components/modals/EditScheduleModal.js","components/modals/DeleteScheduleModal.js","components/modals/EditStationModal.js","components/schedule/StationSchedule.jsx","components/fragments/LocalTime.jsx","components/modals/EditTrainModal.js","components/redux/trains/trainActions.js","components/redux/trains/trainActionTypes.js","components/modals/NewTrainStopModal.js","components/modals/DeleteTrainModal.js","components/modals/MergeTrainModal.js","components/schedule/TrainSchedule.jsx","components/fragments/TimeDuration.jsx","components/search/TrainTransit.jsx","components/search/TrainTravel.jsx","components/search/ResultItem.jsx","components/search/SearchResults.jsx","components/NotFound.jsx","components/About.jsx","components/modals/VoteRequestModal.js","components/review/ReviewList.jsx","App.js","serviceWorker.js","components/redux/stations/stationsReducer.js","components/redux/trains/trainReducer.js","components/redux/user/userReducer.js","components/redux/pendingChanges/pendingChangesReducer.js","components/redux/rootReducer.js","components/redux/store.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","AppDrawer","classes","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","to","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","href","config","process","REACT_APP_STAGE","API_HOST","GA_KEY","CLIENT_ID","Alert","props","elevation","SearchPage","state","loading","allStations","sourceStation","destinationStation","time","date","error","setSourceStation","e","v","setState","setDestinationStation","handleDepartureTimeChange","format","handleDepartureDateChange","handleSnackBarOnClose","search","url","name","window","location","swap","originalSource","axios","get","Config","then","response","data","body","this","CircularProgress","styles","centerScreen","destinationName","sourceName","startStations","filter","station","sort","s1","s2","endStations","moment","center","pageHead","Grid","container","item","justify","xs","sm","Autocomplete","id","onChange","options","getOptionLabel","value","renderInput","params","TextField","label","fullWidth","Button","size","outline","utils","MomentUtils","KeyboardButtonProps","compRightAlign","src","playstoreImg","height","alt","Snackbar","autoHideDuration","onClose","severity","Container","Helmet","Component","fetchStationsRequest","type","fetchStations","dispatch","stations","payload","fetchStationsSuccess","catch","errorMsg","message","fetchStationsFailure","fetchPendingChangesRequest","votePendingChangeRequest","loadingContainer","flexDirection","textAlign","connect","stationData","authData","auth","useEffect","searchTerm","setSearchTerm","toLowerCase","indexOf","a","b","map","Card","CardContent","target","margin","InputProps","endAdornment","InputAdornment","isSignedIn","isLoggedIn","userId","setAuth","clientId","scope","gapi","load","client","init","auth2","getAuthInstance","onAuthChange","listen","idToken","login","currentUser","getBasicProfile","getEmail","getAuthResponse","id_token","onSignInClick","signIn","onSignOutClick","signOut","authState","nameSi","startStation","dh","dm","endStation","ah","am","availability","newTrain","setNewTrain","allClasses","setAllClasses","allTypes","setAllTypes","allAvailabilities","setAllAvailabilities","setAllStations","show","msg","modal","setModal","submitting","setSubmitting","setClasses","newClasses","push","unsetClasses","toggleModal","arrivalTime","departureTime","availabilityOptions","code","displayName","trainTypeOptions","classCheckBoxes","tClass","FormGroup","inline","check","Label","includes","Input","checked","Form","for","Row","form","Col","md","parseInt","hour","minute","defaultValue","classesJoined","join","train","startSt","endSt","avbValue","srcDh","srcDm","dstAh","dstAm","console","log","headers","X_ID_TOKEN","post","res","finally","disabled","Modal","isOpen","toggle","ModalBody","ModalFooter","getTrainDescription","start","end","trainStop","editTrainStop","setEditTrainStop","newEditTrainStop","platform","trainDisplayName","ModalHeader","readOnly","add","handleArrivalTimeChange","setPlatform","put","updateTrainStop","trainStopId","stationName","trainName","delete","deleteTrainStop","updateStation","updateStationFailure","editStation","setEditStation","updatedStation","tel","lat","lng","StationSchedule","stationLoading","scheduleLoading","stops","editStopData","deleteStopData","showEditModal","showDeleteStopModal","showEditStationModal","anchorEl","menuStop","alert","text","level","showEditTrainStopModal","visible","showDeleteTrainStopModal","handleMenuBtnClick","event","stop","currentTarget","handleMenuClose","toggleEditModal","alertOb","toggleDeleteModal","toggleEditStationModal","handleClose","reason","deleteStop","editStop","trainSource","trainDestination","trainDesc","match","arrival","departure","gutterBottom","trainType","trainAvailability","CardActions","trainId","aria-haspopup","aria-controls","keepMounted","Boolean","MenuItem","anchorOrigin","vertical","horizontal","varient","onclose","title","description","forEach","avb","withStyles","LocalTime","min","nextDay","result","updateTrain","updateTrainFailure","editTrain","setEditTrain","availabilities","setAvailabilities","trainTypes","setTrainTypes","trainStops","setTrainStops","split","trim","trainStations","stationId","filteredStations","find","updatedTrain","selectedIndex","setTrainStop","isSameOrAfter","deleteTrain","train2id","setTrain2id","train1","train2","mergeTrain","TrainSchedule","trainLoading","confirmationMsg","confirmationCb","showEditTrainModal","showAddStopModal","showDeleteTrainModal","showMergeTrainModal","toggleEditTrainModal","toggleMergeModal","toggleAddStopModal","toggleDeleteTrainModal","toggleAddNewStop","toggleDeleteTrain","toggleConfirmation","refresh","reload","trainDescription","editTrainData","timeDuration","hrs","mins","TrainTransit","waitTime","style","switchAt","TrainTravel","from","trainUrl","fromStationUrl","toStationUrl","resultHop","trainTravel","getTrainDesc","separator","nodeDot","straightLine","dashedLine","times","ResultItem","trainTravels","transits","components","entries","index","hop","transit","hopItem","component","resultItemBody","resultItem","centerVertical","length","SearchResults","results","resultItems","number","trainHops","dateTimeString","NotFound","centerMessage","About","votePendingChange","itemToVote","vote","requestId","voter","comment","votePendingChangeFailure","newValue","backgroundColor","oldValue","textDecoration","pendingChanges","fetchPendingChanges","page","fetchPendingChangesSuccess","fetchPendingChangesFailure","URLSearchParams","votingItem","setvotingItem","setVote","isVoteModalOpen","setIsVoteModalOpen","setAlert","prevPage","nextPage","changeRequests","changeRequest","itemsDisplay","action","changes","change","entityField","entityType","entityId","entityName","initiator","startIcon","ButtonGroup","App","history","createBrowserHistory","ReactGA","initialize","pageview","pathname","exact","path","StationList","ReviewList","NewTrain","hostname","initialState","reducer","rootReducer","combineReducers","stationsReducer","trains","trainsReducer","pendingChangesReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","createMuiTheme","palette","main","dark","light","secondary","orange","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f39fa13d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"searchStyle_center__31Skh\",\"pageHead\":\"searchStyle_pageHead__tnDQU\",\"rightAlign\":\"searchStyle_rightAlign__2Fab_\",\"centerVertical\":\"searchStyle_centerVertical__13xDj\",\"centerScreen\":\"searchStyle_centerScreen__yNIZc\",\"centerMessage\":\"searchStyle_centerMessage__3Hknt\",\"actionButtons\":\"searchStyle_actionButtons__-oQMN\",\"actionButton\":\"searchStyle_actionButton__1w0zd\",\"resultItem\":\"searchStyle_resultItem__3fbrn\",\"compRightAlign\":\"searchStyle_compRightAlign__ROqqS\",\"arrow\":\"searchStyle_arrow__20Y9G\",\"result-header\":\"searchStyle_result-header__3U77s\",\"result-title\":\"searchStyle_result-title__wIIgA\",\"result-subtitle\":\"searchStyle_result-subtitle__3gRWf\",\"result-item\":\"searchStyle_result-item__2j52G\",\"result-item-header\":\"searchStyle_result-item-header__14EMb\",\"result-item-id\":\"searchStyle_result-item-id__2CWZL\",\"result-item-total-time\":\"searchStyle_result-item-total-time__1KdNx\",\"result-item-num-trains\":\"searchStyle_result-item-num-trains__2c5TC\",\"resultItemBody\":\"searchStyle_resultItemBody__3z44V\",\"resultHop\":\"searchStyle_resultHop__2RZhs\",\"trainTravel\":\"searchStyle_trainTravel__1f0Vx\",\"stations\":\"searchStyle_stations__2ji2g\",\"station\":\"searchStyle_station__1TAfu\",\"separator\":\"searchStyle_separator__1olaF\",\"nodeDot\":\"searchStyle_nodeDot__2Eh0u\",\"dashedLine\":\"searchStyle_dashedLine__24igm\",\"straightLine\":\"searchStyle_straightLine__33bRA\",\"times\":\"searchStyle_times__dnEEG\",\"time\":\"searchStyle_time__1g555\",\"switchAt\":\"searchStyle_switchAt__1Muzp\",\"trainWagon\":\"searchStyle_trainWagon__1aj5s\"};","module.exports = __webpack_public_path__ + \"static/media/playstore.14580db2.png\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function AppDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to=\"/\">\n            <Typography variant=\"h6\" noWrap>\n              Trains - Sri Lanka\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link to=\"/\">\n            <ListItem button key=\"search\">\n              <ListItemIcon>\n                <SearchIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Search\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/stations\">\n            <ListItem button key=\"list\">\n              <ListItemIcon>\n                <ListIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Station List\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/review\">\n            <ListItem button key=\"review\">\n              <ListItemIcon>\n                <VisibilityOutlinedIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Review Changes\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n\n        <List>\n          <a href=\"mailto:sltf-dev@googlegroups.com\">\n            <ListItem button key=\"contact\">\n              <ListItemIcon>\n                <MailIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact\" />\n            </ListItem>\n          </a>\n          <Link to=\"about\">\n            <ListItem button key=\"about\">\n              <ListItemIcon>\n                <InfoIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"About\" />\n            </ListItem>\n          </Link>\n        </List>\n      </Drawer>\n    </>\n  );\n}\n","const dev = {\n  API_HOST: \"http://localhost:8080\",\n  GA_KEY: \"UA-41010626-7\",\n  CLIENT_ID: \"606680519255-o3l0nbsu5chko9l09icctr2oavugo729.apps.googleusercontent.com\"\n};\n\nconst prod = {\n  API_HOST: \"http://www.lktrains.com\",\n  GA_KEY: \"UA-41010626-6\",\n  CLIENT_ID : \"606680519255-9rv3jhki5qushmjlfhftuooussbf26j4.apps.googleusercontent.com\"\n};\n\nconst config = process.env.REACT_APP_STAGE === \"production\" ? prod : dev;\n\nexport default {\n  ...config,\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\nimport styles from \"../../style/searchStyle.module.css\";\nimport Config from \"../../Config\";\nimport { Helmet } from \"react-helmet\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\nimport { Container, Grid, Button } from \"@material-ui/core\";\nimport playstoreImg from '../../images/playstore.png'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default class SearchPage extends Component {\n  state = {\n    loading: true,\n    allStations: [],\n    sourceStation: null,\n    destinationStation: null,\n    time: null,\n    date: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    axios.get(`${Config.API_HOST}/api/station/list`).then((response) => {\n      this.setState({\n        allStations: response.data,\n        loading: false,\n      });\n    });\n  }\n\n  setSourceStation = (e, v) => {\n    this.setState({\n      sourceStation: v,\n    });\n  };\n  setDestinationStation = (e, v) => {\n    this.setState({\n      destinationStation: v,\n    });\n  };\n\n  handleDepartureTimeChange = (date) => {\n    let { time } = this.state;\n    time = date.format(\"hh:mmA\");\n    this.setState({ time });\n  };\n  handleDepartureDateChange = (v) => {\n    let { date } = this.state;\n    date = v.format(\"YYYY-MM-DD\");\n    this.setState({ date });\n  };\n\n  handleSnackBarOnClose = () => {\n    this.setState({ error: null });\n  };\n\n  search = () => {\n    let { sourceStation, destinationStation, time, date } = this.state;\n    let url;\n    if (!sourceStation || sourceStation.name === null) {\n      this.setState({\n        error: \"Please provide the station you want to search from\",\n      });\n      return;\n    }\n    if (!destinationStation || destinationStation.name === null) {\n      this.setState({ error: \"Please provide the station you want to go to\" });\n      return;\n    }\n    url = `/schedule/from/${sourceStation.name}/to/${destinationStation.name}`;\n\n    if (date !== null) {\n      if (time !== null) {\n        url = `${url}/${time}/onward/on/${date}`;\n      } else {\n        url = `${url}/12:00AM/onward/on/${date}`;\n      }\n    } else if (time !== null) {\n      url = `${url}/${time}/onward`;\n    }\n\n    if (url) {\n      window.location = url;\n    }\n  };\n\n  swap = () => {\n    let { sourceStation, destinationStation } = this.state;\n    let originalSource = sourceStation;\n    sourceStation = destinationStation;\n    destinationStation = originalSource;\n    this.setState({ sourceStation, destinationStation });\n  };\n\n  render() {\n    let body;\n    if (this.state.loading) {\n      body = <CircularProgress className={styles.centerScreen} />;\n    } else {\n      let destinationName = this.state.destinationStation\n        ? this.state.destinationStation.name\n        : \"\";\n      let sourceName = this.state.sourceStation\n        ? this.state.sourceStation.name\n        : \"\";\n      let startStations = this.state.allStations\n        .filter((station) => station.name !== destinationName)\n        .sort((s1, s2) => {\n          return s1.name < s2.name ? -1 : 1;\n        });\n      let endStations = this.state.allStations\n        .filter((station) => station.name !== sourceName)\n        .sort((s1, s2) => {\n          return s1.name < s2.name ? -1 : 1;\n        });\n      let time = this.state.time ? moment(this.state.time, \"hh:mmA\") : moment();\n      let date = this.state.date\n        ? moment(this.state.date, \"YYYY-MM-DD\")\n        : moment();\n      body = (\n        <>\n          <h2 className={`${styles.center} ${styles.pageHead}`}>\n            Search Trains\n          </h2>\n          <br />\n\n          <p className={styles.center}>\n            To start, let us know where you are and where you need to go to\n          </p>\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item container justify=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Autocomplete\n                  id=\"source\"\n                  onChange={this.setSourceStation}\n                  options={startStations}\n                  getOptionLabel={(station) => station.name}\n                  value={this.state.sourceStation}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"I'm at\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\">\n              <Grid item>\n                <Button size=\"sm\" outline onClick={this.swap}>\n                  <SwapVertIcon />\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\">\n              <Grid item xs={12} sm={6}>\n                <Autocomplete\n                  id=\"destination\"\n                  onChange={this.setDestinationStation}\n                  options={endStations}\n                  getOptionLabel={(station) => station.name}\n                  value={this.state.destinationStation}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"I want to go to\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\">\n              <Grid item container sm={6} xs={12} spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <MuiPickersUtilsProvider utils={MomentUtils} id=\"time\">\n                    <KeyboardDatePicker\n                      label=\"Date\"\n                      onChange={this.handleDepartureDateChange}\n                      value={date}\n                      fullWidth={true}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"Change date\",\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <MuiPickersUtilsProvider utils={MomentUtils} id=\"time\">\n                    <KeyboardTimePicker\n                      label=\"Departure time\"\n                      onChange={this.handleDepartureTimeChange}\n                      value={time}\n                      fullWidth={true}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"Change time\",\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\">\n              <Grid item sm={6} xs={12} justify=\"flex-end\">\n                <span className={styles.compRightAlign}>\n                  <Button\n                    color=\"primary\"\n                    onClick={this.search}\n                    variant=\"contained\"\n                    size=\"large\"\n                  >\n                    Search\n                  </Button>\n                </span>\n              </Grid>\n            </Grid>\n            <hr/>\n            <Grid item container justify=\"center\">\n              <Grid item sm={3} xs={8} justify=\"center\">\n              <a href={\"https://play.google.com/store/apps/details?id=org.pulasthi.tfsl.android\"}>\n                <img src={playstoreImg} height={\"auto\"} width={\"100%\"} alt=\"Download at PlayStore\"/></a>\n            \n              </Grid>\n            {/* <p/>\n            <p>Or scan the QR code</p>\n            </Col>\n            <Col className=\"col-md-2\">\n            <img src={qrCode} height={\"auto\"} width={\"100%\"}/>\n            </Col> */}\n            </Grid>\n          </Grid>\n          <Snackbar\n            open={this.state.error !== null}\n            autoHideDuration={5000}\n            onClose={this.handleSnackBarOnClose}\n          >\n            <Alert severity=\"error\">{this.state.error}</Alert>\n          </Snackbar>\n        </>\n      );\n    }\n    return (\n      <Container>\n        <Helmet>\n          <title>Search Trains | Trains Sri Lanka</title>\n          <meta\n            name=\"description\"\n            content=\"Search train schedules in Sri Lanka smartly, View timetables of trains and railway stations, and many more\"\n          />\n        </Helmet>\n        {body}\n      </Container>\n    );\n  }\n}\n","import axios from \"axios\";\nimport {\n  FETCH_STATIONS_REQUEST,\n  FETCH_STATIONS_SUCCESS,\n  FETCH_STATIONS_FAILURE,\n  UPDATE_STATION_REQUEST,\n  UPDATE_STATION_SUCCESS,\n  UPDATE_STATION_FAILURE,\n} from \"./stationActionTypes\";\nimport Config from \"../../../Config\";\n\nexport const fetchStationsRequest = () => {\n  return {\n    type: FETCH_STATIONS_REQUEST,\n  };\n};\n\nconst fetchStationsSuccess = (stations) => {\n  return {\n    type: FETCH_STATIONS_SUCCESS,\n    payload: stations,\n  };\n};\n\nconst fetchStationsFailure = (error) => {\n  return {\n    type: FETCH_STATIONS_FAILURE,\n    payload: error,\n  };\n};\n\nexport const updateStationRequest = () => {\n  return {\n    type: UPDATE_STATION_REQUEST,\n  };\n};\n\nconst updateStationSuccess = () => {\n  return {\n    type: UPDATE_STATION_SUCCESS,\n  };\n};\n\nconst updateStationFailure = (error) => {\n  return {\n    type: UPDATE_STATION_FAILURE,\n    payload: error,\n  };\n};\n\nexport const fetchStations = () => {\n  return (dispatch) => {\n    dispatch(fetchStationsRequest);\n    axios\n      .get(`${Config.API_HOST}/api/station/list`)\n      .then((response) => {\n        const stations = response.data;\n        dispatch(fetchStationsSuccess(stations));\n      })\n      .catch((error) => {\n        const errorMsg = error.message;\n        dispatch(fetchStationsFailure(errorMsg));\n      });\n  };\n};\n\nexport const updateStation = (station, authState) => {\n  return (dispatch) => {\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    axios\n      .put(`${Config.API_HOST}/api/station/${station.id}`, station, config)\n      .then((response) => {\n        dispatch(updateStationSuccess());\n      })\n      .catch((error) => {\n        dispatch(updateStationFailure(error.message));\n      });\n  };\n};\n","export const FETCH_STATIONS_REQUEST = \"FETCH_STATIONS_REQUEST\";\nexport const FETCH_STATIONS_SUCCESS = \"FETCH_STATIONS_SUCCESS\";\nexport const FETCH_STATIONS_FAILURE = \"FETCH_STATIONS_FAILURE\";\n\nexport const UPDATE_STATION_REQUEST = \"UPDATE_STATION_REQUEST\";\nexport const UPDATE_STATION_SUCCESS = \"UPDATE_STATION_SUCCESS\";\nexport const UPDATE_STATION_FAILURE = \"UPDATE_STATION_FAILURE\";\n","import axios from \"axios\";\nimport {\n  FETCH_PENDING_CHANGES_REQUEST,\n  FETCH_PENDING_CHANGES_SUCCESS,\n  FETCH_PENDING_CHANGES_FAILURE,\n  VOTE_PENDING_CHANGE_REQUEST,\n  VOTE_PENDING_CHANGE_SUCCESS,\n  VOTE_PENDING_CHANGE_FAILURE,\n} from \"./pendingChangesActionTypes\";\nimport Config from \"../../../Config\";\n\nexport const fetchPendingChangesRequest = () => {\n  return {\n    type: FETCH_PENDING_CHANGES_REQUEST,\n  };\n};\n\nconst fetchPendingChangesSuccess = (pendingChanges) => {\n  return {\n    type: FETCH_PENDING_CHANGES_SUCCESS,\n    payload: pendingChanges,\n  };\n};\n\nconst fetchPendingChangesFailure = (error) => {\n  return {\n    type: FETCH_PENDING_CHANGES_FAILURE,\n    payload: error,\n  };\n};\n\nexport const fetchPendingChanges = (authState, page) => {\n  return (dispatch) => {\n    dispatch(fetchPendingChangesRequest);\n    let config = authState.isLoggedIn\n      ? {\n          headers: {\n            X_ID_TOKEN: authState.idToken,\n          },\n        }\n      : {};\n    axios\n      .get(`${Config.API_HOST}/api/dataChangeRequest/list?page=${page}`, config)\n      .then((response) => {\n        const pendingChanges = response.data;\n        dispatch(fetchPendingChangesSuccess(pendingChanges));\n      })\n      .catch((error) => {\n        const errorMsg = error.message;\n        dispatch(fetchPendingChangesFailure(errorMsg));\n      });\n  };\n};\n\nexport const votePendingChangeRequest = () => {\n  return {\n    type: VOTE_PENDING_CHANGE_REQUEST,\n  };\n};\n\nconst votePendingChangeSuccess = () => {\n  return {\n    type: VOTE_PENDING_CHANGE_SUCCESS,\n  };\n};\n\nconst votePendingChangeFailure = (error) => {\n  return {\n    type: VOTE_PENDING_CHANGE_FAILURE,\n    payload: error,\n  };\n};\n\nexport const votePendingChange = (itemToVote, vote, authState) => {\n  return (dispatch) => {\n    dispatch(votePendingChangeRequest);\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    let body = {\n      requestId: itemToVote,\n      voter: \"UNKNOWN\",\n      vote: vote,\n      comment: \"\",\n    };\n    axios\n      .post(`${Config.API_HOST}/api/vote/`, body, config)\n      .then((response) => {\n        dispatch(votePendingChangeSuccess());\n      })\n      .catch((error) => {\n        const errorMsg = error.message;\n        dispatch(votePendingChangeFailure(errorMsg));\n      });\n  };\n};\n","export const FETCH_PENDING_CHANGES_REQUEST = \"FETCH_PENDING_CHANGES_REQUEST\";\nexport const FETCH_PENDING_CHANGES_SUCCESS = \"FETCH_PENDING_CHANGES_SUCCESS\";\nexport const FETCH_PENDING_CHANGES_FAILURE = \"FETCH_PENDING_CHANGES_FAILURE\";\n\nexport const VOTE_PENDING_CHANGE_REQUEST = \"VOTE_PENDING_CHANGE_REQUEST\";\nexport const VOTE_PENDING_CHANGE_SUCCESS = \"VOTE_PENDING_CHANGE_SUCCESS\";\nexport const VOTE_PENDING_CHANGE_FAILURE = \"VOTE_PENDING_CHANGE_FAILURE\";\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStations } from \"../redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Card,\n  Grid,\n  CardContent,\n  Typography,\n  TextField,\n  makeStyles,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { Helmet } from \"react-helmet\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles({\n  loadingContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  pageHead: {\n    textAlign: \"center\",\n    padding: \"10px\",\n  },\n});\n\nfunction StationList({ stationData, authData, fetchStations }) {\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const onSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  let body = \"\";\n  if (stationData.loading) {\n    body = <CircularProgress className={classes.centerScreen} />;\n  } else if (stationData.error) {\n    body = <h2 className={classes.loadingContainer}>{stationData.error}</h2>;\n  } else {\n    let stations = stationData.stations\n      .filter(\n        (station) =>\n          station.name.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0\n      )\n      .sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0))\n      .map((station) => {\n        return (\n          <Grid item xs={12} key={station.id}>\n            <Card elevation={3}>\n              <CardContent>\n                <Link to={`/schedule/station/${station.name}`}>\n                  <Grid container direction=\"row\">\n                    <Grid item xs={12} sm>\n                      <Typography variant=\"h5\">{station.name}</Typography>\n                    </Grid>\n                  </Grid>\n                </Link>\n              </CardContent>\n            </Card>\n          </Grid>\n        );\n      });\n    body = (\n      <Container>\n        <h1 className={classes.pageHead}>Railway Stations Index</h1>\n        <TextField\n          variant=\"outlined\"\n          onChange={onSearch}\n          margin=\"normal\"\n          fullWidth={true}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        ></TextField>\n        <Grid container spacing={1}>\n          {stations}\n        </Grid>\n      </Container>\n    );\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>Railway Stations of Sri Lanka | Trains - Sri Lanka</title>\n        <meta\n          name=\"description\"\n          content=\"List of railway stations in Sri Lanka, along with their telephone numbers and schedules\"\n        />\n      </Helmet>\n      {body}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stationData: state.stations,\n    authData: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchStations: () => dispatch(fetchStations()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StationList);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, logout } from \"../redux\";\nimport { Button } from \"@material-ui/core\";\nimport Config from \"../../Config\";\n\nconst GoogleAuth = ({ dispatch, isSignedIn, userId }) => {\n  const [auth, setAuth] = useState(null);\n\n  useEffect(() => {\n    const params = {\n      clientId:\n        Config.CLIENT_ID,\n      scope: \"openid\",\n    };\n\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init(params).then(() => {\n        setAuth(window.gapi.auth2.getAuthInstance());\n        onAuthChange(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(onAuthChange);\n      });\n    });\n  }, []);\n\n  const onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      dispatch(\n        login(\n          window.gapi.auth2\n            .getAuthInstance()\n            .currentUser.get()\n            .getBasicProfile()\n            .getEmail(),\n          window.gapi.auth2\n            .getAuthInstance()\n            .currentUser.get()\n            .getAuthResponse().id_token\n        )\n      );\n    } else {\n      dispatch(logout());\n    }\n  };\n\n  const onSignInClick = () => {\n    auth.signIn();\n  };\n\n  const onSignOutClick = () => {\n    auth.signOut();\n  };\n\n  const renderAuthButton = () => {\n    if (isSignedIn === null) {\n      return null;\n    } else if (isSignedIn) {\n      return (\n        <div>\n          <span>Logged in as : {userId} </span>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={onSignOutClick}\n          >\n            Logout\n          </Button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p>\n            You should be logged in to request data changes or vote changes\n            requested by others. Your email or any other detail won't be shown\n            publicly nor shared with anyone.\n          </p>\n          <Button color=\"primary\" onClick={onSignInClick}>\n            Sign In with Google\n          </Button>\n        </div>\n      )\n    }\n  };\n\n  return <div>{renderAuthButton()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isLoggedIn, userId: state.auth.userId };\n};\n\nexport default connect(mapStateToProps)(GoogleAuth);\n","import { LOG_IN, LOG_OUT } from \"./userActionTypes\";\n\nexport const login = (userId, idToken) => {\n  return {\n    type: LOG_IN,\n    payload: { userId: userId, idToken: idToken },\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOG_OUT,\n  };\n};\n","export const LOG_IN = \"LOG_IN\";\nexport const LOG_OUT = \"LOG_OUT\";\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Form,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Container,\n} from \"reactstrap\";\nimport {\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport moment from \"moment\";\nimport Config from \"../Config\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport GoogleAuth from \"./auth/GoogleAuth\";\n\nfunction NewTrain({ authState }) {\n  const [newTrain, setNewTrain] = useState({\n    name: \"\",\n    nameSi: \"\",\n    classes: [],\n    startStation: 0,\n    dh: 0,\n    dm: 0,\n    endStation: 0,\n    ah: 0,\n    am: 0,\n    availability: 0,\n    type: \"\",\n  });\n\n  const [allClasses, setAllClasses] = useState([]);\n  const [allTypes, setAllTypes] = useState([]);\n  const [allAvailabilities, setAllAvailabilities] = useState([]);\n  const [allStations, setAllStations] = useState([]);\n  const [modal, setModal] = useState({ show: false, msg: \"\" });\n  const [submitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`${Config.API_HOST}/api/metadata/availabilities`)\n      .then((response) => {\n        setAllAvailabilities(response.data);\n      });\n    axios.get(`${Config.API_HOST}/api/metadata/classes`).then((response) => {\n      setAllClasses(response.data);\n    });\n    axios.get(`${Config.API_HOST}/api/metadata/trainTypes`).then((response) => {\n      setAllTypes(response.data);\n    });\n    axios.get(`${Config.API_HOST}/api/station/list`).then((response) => {\n      setAllStations(response.data);\n    });\n  }, []);\n\n  const createTrain = () => {\n    setSubmitting(true);\n    let classesJoined = newTrain.classes.join(\", \");\n    if (newTrain.startStation === 0 || newTrain.endStation === 0) {\n      setModal({\n        show: true,\n        msg: \"Starting station or Destination station cannot be empty\",\n      });\n      setSubmitting(false);\n      return;\n    }\n    const train = {\n      name: newTrain.name,\n      nameSi: newTrain.nameSi,\n      classes: classesJoined,\n      startSt: newTrain.startStation,\n      endSt: newTrain.endStation,\n      avbValue: newTrain.availability,\n      type: newTrain.type,\n    };\n\n    const data = {\n      train: train,\n      srcDh: newTrain.dh,\n      srcDm: newTrain.dm,\n      dstAh: newTrain.ah,\n      dstAm: newTrain.am,\n    };\n    console.log(\"authState\", authState);\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    axios\n      .post(`${Config.API_HOST}/api/train/`, data, config)\n      .then((res) => {\n        setModal({\n          show: true,\n          msg: \"Request Successful!\",\n        });\n        setNewTrain({\n          name: \"\",\n          nameSi: \"\",\n          classes: [],\n          startStation: 0,\n          dh: 0,\n          dm: 0,\n          endStation: 0,\n          ah: 0,\n          am: 0,\n          availability: 0,\n          type: \"\",\n        });\n      })\n      .catch((res) => {\n        setModal({\n          show: true,\n          msg: \"Request Failed!\",\n        });\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  const setName = (e) => {\n    setNewTrain({ ...newTrain, name: e.target.value });\n  };\n  const setNameSi = (e) => {\n    setNewTrain({ ...newTrain, nameSi: e.target.value });\n  };\n  const setAvb = (e) => {\n    setNewTrain({ ...newTrain, availability: e.target.value });\n  };\n  const setClasses = (e) => {\n    let newClasses = newTrain.classes.map((item) => item);\n    newClasses.push(e.target.value);\n    setNewTrain({ ...newTrain, classes: newClasses });\n  };\n  const unsetClasses = (e) => {\n    let newClasses = newTrain.classes.map((item) => item);\n    newClasses = newClasses.filter((item) => item !== e.target.value);\n    setNewTrain({ ...newTrain, classes: newClasses });\n  };\n  const setType = (e) => {\n    setNewTrain({ ...newTrain, type: e.target.value });\n  };\n  const setStartStation = (e, v) => {\n    let id = v ? parseInt(v.id) : 0;\n    setNewTrain({ ...newTrain, startStation: id });\n  };\n  const setEndStation = (e, v) => {\n    let id = v ? parseInt(v.id) : 0;\n    setNewTrain({ ...newTrain, endStation: id });\n  };\n\n  const handleArrivalTimeChange = (date) => {\n    setNewTrain({ ...newTrain, ah: date.hour(), am: date.minute() });\n  };\n\n  const handleDepartureTimeChange = (date) => {\n    setNewTrain({ ...newTrain, dh: date.hour(), dm: date.minute() });\n  };\n\n  const toggleModal = () => {\n    setModal({ show: !modal.show });\n  };\n\n  let arrivalTime = moment(`${newTrain.ah}:${newTrain.am}`, \"HH:mm\");\n  let departureTime = moment(`${newTrain.dh}:${newTrain.dm}`, \"HH:mm\");\n\n  let availabilityOptions = allAvailabilities.map((availability) => {\n    return (\n      <option value={availability.code} key={availability.code}>\n        {availability.displayName}\n      </option>\n    );\n  });\n  let trainTypeOptions = allTypes.map((type) => {\n    return (\n      <option value={type} key={type}>\n        {type}\n      </option>\n    );\n  });\n  let classCheckBoxes = allClasses.map((tClass) => {\n    return (\n      <FormGroup inline check key={tClass}>\n        <Label check>\n          {newTrain.classes.includes(tClass) ? (\n            <Input\n              type=\"checkbox\"\n              onChange={unsetClasses}\n              checked\n              value={tClass}\n            />\n          ) : (\n            <Input type=\"checkbox\" onChange={setClasses} value={tClass} />\n          )}\n          {tClass}\n        </Label>\n      </FormGroup>\n    );\n  });\n  let startStations = allStations\n    .filter((station) => station.id !== newTrain.endStation)\n    .sort((s1, s2) => {\n      return s1.name < s2.name ? -1 : 1;\n    });\n  let endStations = allStations\n    .filter((station) => station.id !== newTrain.startStation)\n    .sort((s1, s2) => {\n      return s1.name < s2.name ? -1 : 1;\n    });\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Trains - Sri Lanka | Create New Train</title>\n        <meta name=\"description\" content=\"Add New Train\" />\n      </Helmet>\n      <h2>Add New Train</h2>\n      <GoogleAuth></GoogleAuth>\n      {authState.isLoggedIn ? (\n        <Form>\n          <FormGroup>\n            <Label for=\"name\">Train Name</Label>\n            <Input\n              type=\"text\"\n              name=\"station\"\n              id=\"station\"\n              value={newTrain.name}\n              onChange={setName}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"nameSi\">Train Name(Sinhala)</Label>\n            <Input\n              type=\"text\"\n              name=\"nameSi\"\n              id=\"nameSi\"\n              value={newTrain.nameSi}\n              onChange={setNameSi}\n            />\n          </FormGroup>\n          <Row form>\n            <Col>\n              <FormGroup>\n                <Label for=\"source\">Starting Station</Label>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row form>\n            <Col md={6}>\n              <FormGroup>\n                <Autocomplete\n                  id=\"startStation\"\n                  onChange={setStartStation}\n                  options={startStations}\n                  getOptionLabel={(station) => station.name}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Station name\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <MuiPickersUtilsProvider utils={MomentUtils} id=\"departureTime\">\n                  <KeyboardTimePicker\n                    label=\"Departure time\"\n                    value={departureTime}\n                    onChange={handleDepartureTimeChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change time\",\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row form>\n            <Col>\n              <FormGroup>\n                <Label for=\"source\">Destination Station</Label>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row form>\n            <Col md={6}>\n              <FormGroup>\n                <Autocomplete\n                  id=\"endStation\"\n                  onChange={setEndStation}\n                  options={endStations}\n                  getOptionLabel={(station) => station.name}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Station name\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <MuiPickersUtilsProvider utils={MomentUtils} id=\"arrivalTime\">\n                  <KeyboardTimePicker\n                    label=\"Arrival time\"\n                    value={arrivalTime}\n                    onChange={handleArrivalTimeChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change time\",\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </FormGroup>\n            </Col>\n          </Row>\n          <FormGroup>\n            <Label for=\"avb\">Availability</Label>\n            <Input\n              type=\"select\"\n              name=\"avb\"\n              id=\"avb\"\n              onChange={setAvb}\n              key={newTrain.availability}\n              defaultValue={newTrain.availability}\n            >\n              <option value=\"\" key=\"unchanged\">\n                --Select--\n              </option>\n              {availabilityOptions}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"type\">Type</Label>\n            <Input\n              type=\"select\"\n              name=\"type\"\n              id=\"type\"\n              onChange={setType}\n              key={newTrain.type}\n              defaultValue={newTrain.type}\n            >\n              <option value=\"\" key=\"unchanged\">\n                --Select--\n              </option>\n              {trainTypeOptions}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <p>Classes Available</p>\n            {classCheckBoxes}\n          </FormGroup>\n          <Button color=\"primary\" onClick={createTrain} disabled={submitting}>\n            Create\n          </Button>\n        </Form>\n      ) : (\n        \"\"\n      )}\n      <Modal isOpen={modal.show} toggle={toggleModal}>\n        <ModalBody>\n          <p>{modal.msg}</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleModal}>\n            OK\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(NewTrain);\n","export const getTrainDescription = (name, start, end) => {\n  let displayName = `${start} → ${end}`;\n  if (name) {\n    displayName = `${name} (${displayName})`;\n  }\n  return displayName;\n};\n","import React, { useState } from \"react\";\nimport {\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { connect } from \"react-redux\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport { getTrainDescription } from \"../../utils/utils\";\nimport Config from \"../../Config\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\n\nfunction EditScheduleModal({ isOpen, setOpen, trainStop, authState }) {\n  const [editTrainStop, setEditTrainStop] = useState({});\n\n  if (trainStop == null) {\n    return null;\n  }\n\n  if (editTrainStop == null || editTrainStop.id !== trainStop.id) {\n    let newEditTrainStop = {\n      id: trainStop.id,\n      ah: trainStop.ah,\n      am: trainStop.am,\n      dh: trainStop.dh,\n      dm: trainStop.dm,\n      platform: trainStop.platform,\n    };\n    setEditTrainStop(newEditTrainStop);\n  }\n\n  const handleArrivalTimeChange = (date) => {\n    let trainStop = { ...editTrainStop };\n    trainStop.ah = date.hour();\n    trainStop.am = date.minute();\n    let departureTime = date.add(1, \"m\");\n    trainStop.dh = departureTime.hour();\n    trainStop.dm = departureTime.minute();\n    setEditTrainStop(trainStop);\n  };\n\n  const handleDepartureTimeChange = (date) => {\n    let trainStop = { ...editTrainStop };\n    trainStop.dh = date.hour();\n    trainStop.dm = date.minute();\n    setEditTrainStop(trainStop);\n  };\n\n  const setPlatform = (e) => {\n    let trainStop = { ...editTrainStop};\n    trainStop.platform = e.target.value;\n    setEditTrainStop(trainStop);\n  };\n\n  const updateTrainStop = () => {\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    axios\n      .put(\n        `${Config.API_HOST}/api/schedule/${editTrainStop.id}`,\n        editTrainStop,\n        config\n      )\n      .then((res) => setOpen(false,\"Request Successful!\",\"success\"))\n      .catch((error) => setOpen(false,\"Request Failed!\",\"error\"));\n  };\n\n  let trainDisplayName = getTrainDescription(\n    trainStop.train.name,\n    trainStop.train.startStation,\n    trainStop.train.endStation\n  );\n\n  let arrivalTime = moment(`${editTrainStop.ah}:${editTrainStop.am}`, \"HH:mm\");\n  let departureTime = moment(\n    `${editTrainStop.dh}:${editTrainStop.dm}`,\n    \"HH:mm\"\n  );\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => setOpen(!isOpen,null,null)} zIndex={1300}>\n      <ModalHeader\n        toggle={() => {\n          setOpen(!isOpen, null, null);\n        }}\n      >\n        Edit Train Stop\n      </ModalHeader>\n      <ModalBody>\n        <GoogleAuth></GoogleAuth>\n\n        {authState.isLoggedIn ? (\n          <>\n            <FormGroup>\n              <Label for=\"name\">Station Name</Label>\n              <Input\n                type=\"text\"\n                name=\"station\"\n                id=\"station\"\n                value={trainStop.station}\n                readOnly\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"nameSi\">Train</Label>\n              <Input\n                type=\"text\"\n                name=\"train\"\n                id=\"train\"\n                value={trainDisplayName}\n                readOnly\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardTimePicker\n                  className=\"mx-1\"\n                  label=\"Arrival Time\"\n                  value={arrivalTime}\n                  onChange={(e) => handleArrivalTimeChange(e)}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change time\",\n                  }}\n                />\n                <KeyboardTimePicker\n                  className=\"mx-1\"\n                  label=\"Departure Time\"\n                  value={departureTime}\n                  onChange={(e) => handleDepartureTimeChange(e)}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change time\",\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"platform\">Platform</Label>\n              <Input\n                type=\"text\"\n                name=\"platform\"\n                id=\"platform\"\n                value={editTrainStop.platform}\n                onChange={(e) => setPlatform(e)}\n              ></Input>\n            </FormGroup>\n          </>\n        ) : (\n          \"\"\n        )}\n      </ModalBody>\n      <ModalFooter>\n        {authState.isLoggedIn ? (\n          <Button color=\"primary\" onClick={(e) => updateTrainStop()}>\n            Request Update\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            setOpen(!isOpen, null, null);\n          }}\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(EditScheduleModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n  } from \"reactstrap\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\n\n\nfunction DeleteScheduleModal({\n  isOpen,\n  setOpen,\n  trainStopId,\n  stationName,\n  trainName,\n  authState,\n}) {\n\n    const deleteTrainStop = () => {\n        let config = {\n          headers: {\n            X_ID_TOKEN: authState.idToken,\n          },\n        };\n        axios.delete(`${Config.API_HOST}/api/schedule/${trainStopId}`,config)\n        .then((res) => {\n          setOpen(false, \"Request Successful!\", \"success\");\n        })\n        .catch((error) => setOpen(false,\"Request Failed!\", \"error\"));\n      };\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => setOpen(!isOpen, null, null)} zIndex={1300}>\n    <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>Edit Station</ModalHeader>\n    <ModalBody>\n      <GoogleAuth></GoogleAuth>\n      {authState.isLoggedIn ? (\n        <div>\n            <hr/>\n          <p>Are you sure you want to delete the {trainName} train stop at {stationName}?</p>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </ModalBody>\n    <ModalFooter>\n      {authState.isLoggedIn ? (\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            deleteTrainStop(trainStopId);\n            setOpen(!isOpen, null, null);\n          }}\n        >\n          Request Delete\n        </Button>\n      ) : (\n        \"\"\n      )}\n      <Button color=\"secondary\" onClick={() => setOpen(!isOpen, null, null)}>\n        Cancel\n      </Button>\n    </ModalFooter>\n  </Modal>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(DeleteScheduleModal);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport { updateStation } from \"../redux\";\nimport { connect } from \"react-redux\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\n\nfunction EditStationModal({\n  isOpen,\n  setOpen,\n  station,\n  updateStation,\n  authState,\n}) {\n  const [editStation, setEditStation] = useState(station);\n\n  return (\n    station && (\n      <Modal\n        isOpen={isOpen}\n        toggle={() => setOpen(!isOpen, null, null)}\n        zIndex={1300}\n      >\n        <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>\n          Edit Station\n        </ModalHeader>\n        <ModalBody>\n          <GoogleAuth></GoogleAuth>\n          {authState.isLoggedIn ? (\n            <div>\n              <FormGroup>\n                <Label for=\"name\">Station Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  value={editStation.name}\n                  onChange={(e) => {\n                    let updatedStation = {\n                      ...editStation,\n                      name: e.target.value,\n                    };\n                    setEditStation(updatedStation);\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"telId\">Telephone</Label>\n                <Input\n                  type=\"text\"\n                  name=\"tel\"\n                  id=\"tel\"\n                  value={editStation.tel}\n                  onChange={(e) => {\n                    let updatedStation = {\n                      ...editStation,\n                      tel: e.target.value,\n                    };\n                    setEditStation(updatedStation);\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lat\">Latitude</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lat\"\n                  id=\"lat\"\n                  value={editStation.lat}\n                  onChange={(e) => {\n                    let updatedStation = {\n                      ...editStation,\n                      lat: e.target.value,\n                    };\n                    setEditStation(updatedStation);\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"Longitude\">Longitude</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lng\"\n                  id=\"lng\"\n                  value={editStation.lng}\n                  onChange={(e) => {\n                    let updatedStation = {\n                      ...editStation,\n                      lng: e.target.value,\n                    };\n                    setEditStation(updatedStation);\n                  }}\n                />\n              </FormGroup>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </ModalBody>\n        <ModalFooter>\n          {authState.isLoggedIn ? (\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                updateStation(editStation, authState);\n                setOpen(!isOpen, \"Request Sent! \", \"success\");\n              }}\n            >\n              Request Update\n            </Button>\n          ) : (\n            \"\"\n          )}\n          <Button\n            color=\"secondary\"\n            onClick={() => setOpen(!isOpen, null, null)}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    )\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateStation: (station, authState) =>\n      dispatch(updateStation(station, authState)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditStationModal);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"reactstrap\";\nimport moment from \"moment\";\nimport { Helmet } from \"react-helmet\";\nimport Config from \"../../Config\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"../../style/searchStyle.module.css\";\nimport EditScheduleModal from \"../modals/EditScheduleModal\";\nimport DeleteScheduleModal from \"../modals/DeleteScheduleModal\";\nimport {\n  Menu,\n  MenuItem,\n  Button,\n  Snackbar,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Link } from \"react-router-dom\";\nimport { getTrainDescription } from \"../../utils/utils\";\nimport EditStationModal from \"../modals/EditStationModal\";\n\nconst useStyles = (theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n});\n\nclass StationSchedule extends Component {\n  state = {\n    stationLoading: true,\n    scheduleLoading: true,\n    station: {},\n    stops: [],\n    editStopData: {\n      id: \"\",\n      ah: \"\",\n      am: \"\",\n      dh: \"\",\n      dm: \"\",\n      platform: \"\",\n      station: \"\",\n      train: \"\",\n    },\n    deleteStopData: {\n      trainName: \"\",\n      trainStopId: 0,\n    },\n    showEditModal: false,\n    showDeleteStopModal: false,\n    showEditStationModal: false,\n    anchorEl: null,\n    menuStop: null,\n    alert: {\n      open: false,\n      text: \"\",\n      level: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const { name } = this.props.match.params;\n    axios\n      .get(`${Config.API_HOST}/api/station/name/${name}`)\n      .then((response) => {\n        this.setState({\n          station: response.data,\n          stationLoading: false,\n        });\n      });\n    axios\n      .get(`${Config.API_HOST}/api/schedule/station/name/${name}`)\n      .then((response) => {\n        this.setState({\n          stops: response.data,\n          scheduleLoading: false,\n        });\n      });\n  }\n\n  showEditTrainStopModal = (visible) => {\n    this.setState({\n      showEditModal: visible,\n    });\n  };\n\n  showDeleteTrainStopModal = (visible) => {\n    this.setState({\n      showDeleteStopModal: visible,\n    });\n  };\n\n  handleMenuBtnClick = (event, stop) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      menuStop: stop,\n    });\n  };\n\n  handleMenuClose = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    let { stationLoading, scheduleLoading } = this.state;\n    const { classes } = this.props;\n    let body;\n    if (stationLoading || scheduleLoading) {\n      body = <CircularProgress className={styles.centerScreen} />;\n    } else {\n      let stops = this.state.stops.map((stop) => {\n        let arrival = \"N/A\";\n        let departure = \"N/A\";\n        if (stop.trainSource !== this.state.station.name) {\n          arrival = moment(`${stop.ah}:${stop.am}`, \"HH:mm\").format(\"hh:mm a\");\n        }\n        if (stop.trainDestination !== this.state.station.name) {\n          departure = moment(`${stop.dh}:${stop.dm}`, \"HH:mm\").format(\n            \"hh:mm a\"\n          );\n        }\n        const trainName = getTrainDescription(\n          stop.trainName,\n          stop.trainSource,\n          stop.trainDestination\n        );\n\n        return (\n          <Grid item xs={12} sm={6} md={4} key={stop.id}>\n            <Card elevation={3}>\n              <CardContent>\n                <Typography variant=\"h5\" gutterBottom>\n                  {trainName}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                  Train Type : {stop.trainType}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                  Runs on : {stop.trainAvailability}\n                </Typography>\n                <Typography variant=\"body1\">Arrival : {arrival}</Typography>\n                <Typography variant=\"body1\">Departure : {departure}</Typography>\n                <Typography variant=\"body1\">\n                  {stop.platform ? `Platform: ${stop.platform}` : \"\"}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Link to={`/schedule/train/${stop.trainId}`}>\n                  <Button variant=\"contained\" color=\"primary\" size=\"small\">\n                    Schedule\n                  </Button>\n                </Link>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  aria-haspopup=\"true\"\n                  aria-controls=\"simple-menu\"\n                  size=\"small\"\n                  className={classes.margin}\n                  onClick={(event) => this.handleMenuBtnClick(event, stop)}\n                >\n                  More..\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        );\n      });\n      body = (\n        <>\n          <Grid container spacing={1} direction=\"column\">\n            <h3 className=\"p-2 text-center\">\n              Station Schedule - {this.state.station.name}\n            </h3>\n\n            <Grid container item>\n              <Grid item >\n              <Typography variant=\"body1\" display=\"inline\">\n                Telephone : &nbsp;\n              </Typography>\n              <Typography variant=\"body2\" display=\"inline\">\n                {this.state.station.tel?this.state.station.tel:\"Not Available\"}\n              </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container item justify=\"flex-end\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                href=\"/trains/new\"\n                className={classes.margin}\n              >\n                Add New Train\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.editStation}\n                className={classes.margin}\n              >\n                Edit Station\n              </Button>\n            </Grid>\n            <Grid container item spacing={1}>\n              {stops}\n            </Grid>\n          </Grid>\n\n          <Menu\n            id=\"actions-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleMenuClose}\n          >\n            <MenuItem\n              onClick={() => {\n                this.editStop(\n                  this.state.menuStop.id,\n                  this.state.menuStop.ah,\n                  this.state.menuStop.am,\n                  this.state.menuStop.dh,\n                  this.state.menuStop.dm,\n                  this.state.menuStop.platform,\n                  this.state.menuStop.trainName,\n                  this.state.menuStop.trainSource,\n                  this.state.menuStop.trainDestination\n                );\n                this.handleMenuClose();\n              }}\n            >\n              Edit Time or Platform\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                this.deleteStop(\n                  this.state.menuStop.id,\n                  this.state.menuStop.trainName\n                );\n                this.handleMenuClose();\n              }}\n            >\n              Delete\n            </MenuItem>\n          </Menu>\n          <Snackbar\n            open={this.state.alert.open}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n            autoHideDuration={5000}\n            onClose={this.handleClose}\n          >\n            <MuiAlert\n              elevation={6}\n              varient=\"filled\"\n              onclose={this.handleClose}\n              severity={this.state.alert.level}\n            >\n              {this.state.alert.text}\n            </MuiAlert>\n          </Snackbar>\n          <EditScheduleModal\n            isOpen={this.state.showEditModal}\n            setOpen={this.toggleEditModal}\n            trainStop={this.state.editStopData}\n          />\n          <DeleteScheduleModal\n            isOpen={this.state.showDeleteStopModal}\n            setOpen={this.toggleDeleteModal}\n            stationName={this.state.station.name}\n            trainName={this.state.deleteStopData.trainName}\n            trainStopId={this.state.deleteStopData.trainStopId}\n          />\n          <EditStationModal\n            isOpen={this.state.showEditStationModal}\n            setOpen={this.toggleEditStationModal}\n            station={this.state.station}\n          />\n        </>\n      );\n    }\n    let title = `Schedule of ${this.state.station.name} Station | Trains - Sri Lanka`;\n    let description = `The Schedule/Timetable of the ${this.state.station.name} railway station, with arrival/departure times and other details of trains`;\n    return (\n      <Container>\n        <Helmet>\n          <title>{title}</title>\n          <meta name=\"description\" content={description} />\n        </Helmet>\n        {body}\n      </Container>\n    );\n  }\n\n  toggleEditModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showEditModal: isOpen,\n    });\n  };\n\n  toggleDeleteModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showDeleteStopModal: isOpen,\n    });\n  };\n\n  toggleEditStationModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showEditStationModal: isOpen,\n    });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({\n      alert: {\n        open: false,\n      },\n    });\n  };\n\n  deleteStop = (id, trainName) => {\n    let deleteStopData = {\n      trainName: trainName,\n      trainStopId: id,\n    };\n    this.setState({\n      deleteStopData: deleteStopData,\n      showDeleteStopModal: true,\n    });\n  };\n\n  editStop = (\n    id,\n    ah,\n    am,\n    dh,\n    dm,\n    platform,\n    trainName,\n    trainSource,\n    trainDestination\n  ) => {\n    let trainDesc = {\n      name: trainName,\n      startStation: trainSource,\n      endStation: trainDestination,\n    };\n    let station = this.state.station.name;\n    this.setState({\n      editStopData: {\n        id,\n        ah,\n        am,\n        dh,\n        dm,\n        platform,\n        station,\n        train: trainDesc,\n      },\n      showEditModal: true,\n    });\n  };\n\n  editStation = () =>{\n    this.setState({\n      showEditStationModal: true,\n    });\n  }\n\n  onTrainStopUpdated(id, ah, am, dh, dm, platform) {\n    let stops = this.state.stops;\n    stops.forEach(function (stop) {\n      if (stop.id === id) {\n        stop.ah = ah;\n        stop.am = am;\n        stop.dh = dh;\n        stop.dm = dm;\n        stop.platform = platform;\n      }\n    });\n    this.setState({\n      stops: stops,\n    });\n  }\n\n  toggleEditStop() {\n    this.setState({\n      showEditModal: !this.state.showEditModal,\n    });\n  }\n\n  onTrainUpdated(id, name, avb, classes, type) {\n    let stops = this.state.stops;\n    stops.forEach((stop) => {\n      if (stop.trainId === id) {\n        stop.trainName = name;\n        stop.trainType = type;\n        stop.trainAvailability = avb;\n      }\n    });\n    this.setState({\n      stops: stops,\n    });\n  }\n}\nexport default withStyles(useStyles)(StationSchedule);\n","import React from \"react\";\nimport moment from \"moment\";\n\nexport default function LocalTime({ hour, min }) {\n  let nextDay = false;\n  if (hour >= 24) {\n    hour = hour % 24;\n    nextDay = true;\n  }\n  let time = moment().hour(hour).minute(min).format(\"hh:mm a\");\n  let result = `${time}${nextDay ? \"(Next Day)\" : \"\"}`;\n  return <>{result}</>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport { updateTrain } from \"../redux\";\nimport { connect } from \"react-redux\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction EditTrainModal({\n  isOpen,\n  setOpen,\n  train,\n  stops,\n  updateTrain,\n  authState,\n}) {\n  const [editTrain, setEditTrain] = useState(train);\n  const [availabilities, setAvailabilities] = useState([]);\n  const [allClasses, setAllClasses] = useState([]);\n  const [trainTypes, setTrainTypes] = useState([]);\n  const [trainStops, setTrainStops] = useState(stops);\n  const [allStations, setAllStations] = useState([]);\n\n  if (editTrain.id !== train.id) {\n    setEditTrain(train);\n  }\n  let classes = [];\n  if (editTrain.classes) {\n    classes = editTrain.classes.split(\",\").map((item) => item.trim());\n  }\n\n  useEffect(() => {\n\n      setTrainStops(stops);\n\n    axios.get(`${Config.API_HOST}/api/station/list`).then((response) => {\n      setAllStations(response.data);\n    });\n    axios\n      .get(`${Config.API_HOST}/api/metadata/availabilities`)\n      .then((response) => {\n        setAvailabilities(response.data);\n      });\n    axios.get(`${Config.API_HOST}/api/metadata/classes`).then((response) => {\n      setAllClasses(response.data);\n    });\n    axios.get(`${Config.API_HOST}/api/metadata/trainTypes`).then((response) => {\n      setTrainTypes(response.data);\n    });\n  }, []);\n\n  let availabilityOptions = availabilities.map((availability) => {\n    return (\n      <option value={availability.code} key={availability.code}>\n        {availability.displayName}\n      </option>\n    );\n  });\n  let trainStations = [];\n  trainStops.forEach((stop) => {\n    trainStations.push(stop.stationId);\n  });\n  let filteredStations = allStations.filter(\n    (station) => trainStations.indexOf(station.id) >= 0\n  );\n  let startStation = allStations.find(station => station.id===editTrain.startSt);\n  let endStation = allStations.find(station => station.id===editTrain.endSt);\n\n  let trainTypeOptions = trainTypes.map((type) => {\n    return (\n      <option value={type} key={type}>\n        {type}\n      </option>\n    );\n  });\n  let classCheckBoxes = allClasses.map((tClass) => {\n    return (\n      <FormGroup check inline key={tClass}>\n        <Label check>\n          {classes.includes(tClass) ? (\n            <Input\n              type=\"checkbox\"\n              onChange={(e) => {\n                let newClasses = classes.map((item) => item);\n                newClasses = newClasses.filter(\n                  (item) => item !== e.target.value\n                );\n\n                let newTrain = {\n                  ...editTrain,\n                  classes: newClasses.join(\", \"),\n                };\n                setEditTrain(newTrain);\n              }}\n              checked={true}\n              value={tClass}\n            ></Input>\n          ) : (\n            <Input\n              type=\"checkbox\"\n              onChange={(e) => {\n                let newClasses = classes.map((item) => item);\n                newClasses.push(e.target.value);\n\n                let updateTrain = {\n                  ...editTrain,\n                  classes: newClasses.join(\", \"),\n                };\n                setEditTrain(updateTrain);\n              }}\n              checked={false}\n              value={tClass}\n            ></Input>\n          )}\n          {tClass}\n        </Label>\n      </FormGroup>\n    );\n  });\n\n  const setStartStation = (e, v) => {\n    let id = v ? parseInt(v.id) : 0;\n    editTrain.startSt = id;\n  };\n  const setEndStation = (e, v) => {\n    let id = v ? parseInt(v.id) : 0;\n    editTrain.endSt = id;\n  };\n\n  return (\n    train && (\n      <Modal\n        isOpen={isOpen}\n        toggle={() => setOpen(!isOpen, null, null)}\n        zIndex={1300}\n      >\n        <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>\n          Edit Train\n        </ModalHeader>\n        <ModalBody>\n          <GoogleAuth></GoogleAuth>\n          {authState.isLoggedIn ? (\n            <>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  value={editTrain.name}\n                  onChange={(e) => {\n                    let updatedTrain = {\n                      ...editTrain,\n                      name: e.target.value,\n                    };\n                    setEditTrain(updatedTrain);\n                  }}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"avb\">Availability</Label>\n                <Input\n                  type=\"select\"\n                  name=\"avb\"\n                  id=\"avb\"\n                  onChange={(e) => {\n                    let updatedTrain = {\n                      ...editTrain,\n                      avbValue: e.target.value,\n                      avb: e.target.options[e.target.selectedIndex].text,\n                    };\n                    setEditTrain(updatedTrain);\n                  }}\n                  key={editTrain.avbValue}\n                  defaultValue={editTrain.avbValue}\n                >\n                  <option value=\"\" key=\"unchanged\">\n                    --Select--\n                  </option>\n                  {availabilityOptions}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"select\"\n                  name=\"type\"\n                  id=\"type\"\n                  onChange={(e) => {\n                    let updatedTrain = {\n                      ...editTrain,\n                      type: e.target.value,\n                    };\n                    setEditTrain(updatedTrain);\n                  }}\n                  key={editTrain.avbValue}\n                  defaultValue={editTrain.avbValue}\n                >\n                  <option value=\"\" key=\"unchanged\">\n                    --Select--\n                  </option>\n                  {trainTypeOptions}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"station\">Starting Station</Label>\n                <Autocomplete\n                  id=\"station\"\n                  onChange={setStartStation}\n                  options={filteredStations.filter(station => station !== endStation)}\n                  getOptionLabel={(station) => station.name}\n                  defaultValue={startStation}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Starting Station\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"station\">Destination Station</Label>\n                <Autocomplete\n                  id=\"station\"\n                  onChange={setEndStation}\n                  options={filteredStations.filter(station => station !== startStation)}\n                  getOptionLabel={(station) => station.name}\n                  defaultValue={endStation}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Destination Station\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </FormGroup>\n              <p>Classes Available</p>\n              {classCheckBoxes}\n            </>\n          ) : (\n            \"\"\n          )}\n        </ModalBody>\n        <ModalFooter>\n          {authState.isLoggedIn ? (\n            <Button\n              color=\"primary\"\n              onClick={(e) => {\n                updateTrain(editTrain, authState);\n                setOpen(false, \"Request Successful!\", \"success\");\n              }}\n            >\n              Request Update\n            </Button>\n          ) : (\n            \"\"\n          )}\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              setOpen(false, null, null);\n            }}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    )\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateTrain: (train, authState) => dispatch(updateTrain(train, authState)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTrainModal);\n","import axios from \"axios\";\nimport {\n  UPDATE_TRAIN_REQUEST,\n  UPDATE_TRAIN_SUCCESS,\n  UPDATE_TRAIN_FAILURE,\n} from \"./trainActionTypes\";\nimport Config from \"../../../Config\";\n\nexport const updateTrainRequest = () => {\n  return {\n    type: UPDATE_TRAIN_REQUEST,\n  };\n};\n\nconst updateTrainSuccess = () => {\n  return {\n    type: UPDATE_TRAIN_SUCCESS,\n  };\n};\n\nconst updateTrainFailure = (error) => {\n  return {\n    type: UPDATE_TRAIN_FAILURE,\n    payload: error,\n  };\n};\n\nexport const updateTrain = (train, authState) => {\n  return (dispatch) => {\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    axios\n      .put(`${Config.API_HOST}/api/train/${train.id}`, train, config)\n      .then((response) => {\n        dispatch(updateTrainSuccess());\n      })\n      .catch((error) => {\n        dispatch(updateTrainFailure(error.message));\n      });\n  };\n};\n","export const UPDATE_TRAIN_REQUEST = \"UPDATE_TRAIN_REQUEST\";\nexport const UPDATE_TRAIN_SUCCESS = \"UPDATE_TRAIN_SUCCESS\";\nexport const UPDATE_TRAIN_FAILURE = \"UPDATE_TRAIN_FAILURE\";\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStations } from \"../redux\";\nimport styles from \"../../style/searchStyle.module.css\";\nimport { CircularProgress, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\nimport {\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  Label,\n  Modal,\n  Input,\n  ModalFooter,\n  Button,\n  Alert,\n} from \"reactstrap\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\n\nfunction NewTrainStopModal({\n  isOpen,\n  setOpen,\n  trainId,\n  stationData,\n  authState,\n  fetchStations,\n}) {\n  useEffect(() => {\n    fetchStations();\n  }, []);\n\n  const [trainStop, setTrainStop] = useState({ah:0,dh:0});\n\n  const handleArrivalTimeChange = (date) => {\n    let stop = { ...trainStop };\n    stop.ah = date.hour();\n    stop.am = date.minute();\n    if (stop.ah && stop.am && stop.dh === 0 && stop.dm === 0) {\n      stop.dm = stop.am + 1;\n      if (stop.dm >= 60) {\n        stop.dm = stop.dm - 60;\n        stop.dh = stop.ah + 1;\n      } else {\n        stop.dh = stop.ah;\n      }\n    }\n    setTrainStop(stop);\n  };\n\n  const handleDepartureTimeChange = (date) => {\n    let stop = { ...trainStop };\n    stop.dh = date.hour();\n    stop.dm = date.minute();\n    setTrainStop(stop);\n  };\n\n  const setPlatform = (e) => {\n    let stop = { ...trainStop };\n    stop.platform = e.target.value;\n    setTrainStop(stop);\n  };\n\n  const addTrainStop = () => {\n    let stop = {\n      ...trainStop,\n      trainId: trainId,\n    };\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    axios.post(`${Config.API_HOST}/api/schedule/`, stop, config)\n    .then((res) => {\n      setOpen(false,\"Request Successful!\",\"success\");\n    })\n    .catch((error) => setOpen(false,\"Request Failed!\",\"error\"));\n  };\n\n  const setStation = (e, v) => {\n    let id = v ? parseInt(v.id) : 0;\n    let stop = { ...trainStop };\n    stop.stationId = id;\n    setTrainStop(stop);\n  };\n\n  let body = \"\";\n  if (stationData.loading) {\n    body = <CircularProgress className={styles.centerScreen} />;\n  } else if (stationData.error) {\n    body = <h2 className={styles.pageHead}>{stationData.error}</h2>;\n  } else {\n    let stations = stationData.stations.sort((s1, s2) => {\n      return s1.name < s2.name ? -1 : 1;\n    });\n    let alert = \"\";\n    let arrivalTime =  moment(`${trainStop.ah}:${trainStop.am}`, \"HH:mm\");\n    let departureTime = moment(`${trainStop.dh}:${trainStop.dm}`, \"HH:mm\");\n    alert = arrivalTime.isSameOrAfter(departureTime)\n      ? \"Arrival time should be before departure time\"\n      : alert;\n    alert = !trainStop.stationId ? \"Please select station\":alert;\n    console.log('trainStop.stationId', trainStop.stationId)\n    body = (\n      <Modal isOpen={isOpen} toggle={() => setOpen(!isOpen, null, null)} zIndex={1300}>\n        <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>\n          Add Train Stop\n        </ModalHeader>\n        <ModalBody>\n          <GoogleAuth></GoogleAuth>\n          {authState.isLoggedIn ? (\n            <div>\n              {alert ? <Alert color=\"danger\">{alert}</Alert> : \"\"}\n              <FormGroup>\n                <Label for=\"station\">Station</Label>\n                <Autocomplete\n                  id=\"station\"\n                  onChange={setStation}\n                  options={stations}\n                  getOptionLabel={(station) => station.name}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Station name\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  )}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                  <KeyboardTimePicker\n                    className=\"mx-1\"\n                    label=\"Arrival Time\"\n                    value={arrivalTime}\n                    onChange={handleArrivalTimeChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change time\",\n                    }}\n                  />\n                  <KeyboardTimePicker\n                    className=\"mx-1\"\n                    label=\"Departure Time\"\n                    value={departureTime}\n                    onChange={handleDepartureTimeChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change time\",\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"platform\">Platform</Label>\n                <Input\n                  type=\"text\"\n                  name=\"platform\"\n                  id=\"platform\"\n                  value={trainStop.platform}\n                  onChange={setPlatform}\n                />\n              </FormGroup>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button color={alert?\"secondary\":\"primary\"} onClick={addTrainStop} disabled={alert}> \n            Request to Add\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={() => setOpen(!isOpen, null, null)}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n  return <div>{body}</div>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n    stationData: state.stations,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchStations: () => dispatch(fetchStations()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTrainStopModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n  } from \"reactstrap\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\n\n\nfunction DeleteTrainModal({\n  isOpen,\n  setOpen,\n  trainId,\n  authState,\n}) {\n\n    const deleteTrain = () => {\n        let config = {\n          headers: {\n            X_ID_TOKEN: authState.idToken,\n          },\n        };\n        axios.delete(`${Config.API_HOST}/api/train/${trainId}`,config)\n        .then((res) => {\n          setOpen(false, \"Request Successful!\", \"success\");\n        })\n        .catch((error) => setOpen(false,\"Request Failed!\", \"error\"));\n      };\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => setOpen(!isOpen, null, null)} zIndex={1300}>\n    <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>Delete Train</ModalHeader>\n    <ModalBody>\n      <GoogleAuth></GoogleAuth>\n      {authState.isLoggedIn ? (\n        <div>\n            <hr/>\n          <p>Are you sure you want to delete the train?</p>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </ModalBody>\n    <ModalFooter>\n      {authState.isLoggedIn ? (\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            deleteTrain();\n            setOpen(!isOpen, null, null);\n          }}\n        >\n          Request Delete\n        </Button>\n      ) : (\n        \"\"\n      )}\n      <Button color=\"secondary\" onClick={() => setOpen(!isOpen, null, null)}>\n        Cancel\n      </Button>\n    </ModalFooter>\n  </Modal>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(DeleteTrainModal);\n","import React, {useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\nimport {\n    Button,\n    FormGroup,\n    Input,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n  } from \"reactstrap\";\n\nfunction MergeTrainModal({ isOpen, setOpen, trainId, authState }) {\n\n    const [train2id, setTrain2id] = useState(0);\n    \n  const mergeTrain = () => {\n    let config = {\n      headers: {\n        X_ID_TOKEN: authState.idToken,\n      },\n    };\n    let data = {\n      train1: trainId,\n      train2: train2id,\n    };\n    axios\n      .post(`${Config.API_HOST}/api/train/merge`, data, config)\n      .then((res) => {\n        setOpen(false, \"Request Successful!\", \"success\");\n      })\n      .catch((error) => setOpen(false, \"Request Failed!\", \"error\"));\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={() => setOpen(!isOpen, null, null)}\n      zIndex={1300}\n    >\n      <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>\n        Merge Connecting Train\n      </ModalHeader>\n      <ModalBody>\n        <GoogleAuth></GoogleAuth>\n        {authState.isLoggedIn ? (\n          <div>\n            <p>Open the other train you want to merge into this in a different tab/window and enter the ID of that train here. Train ID is the number that can be found at the end of the URL (of the other train)</p>\n            <FormGroup>\n              <Label for=\"name\">Merging Train Id</Label>\n              <Input\n                type=\"number\"\n                name=\"mergingId\"\n                id=\"mergingId\"\n                value={train2id}\n                onChange={(e) => {\n                  setTrain2id(e.target.value);\n                }}\n              ></Input>\n            </FormGroup>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </ModalBody>\n      <ModalFooter>\n        {authState.isLoggedIn && train2id>0 ? (\n          <Button\n            color=\"danger\"\n            onClick={() => {\n              mergeTrain();\n              setOpen(!isOpen, null, null);\n            }}\n          >\n            Request Merge\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <Button color=\"secondary\" onClick={() => setOpen(!isOpen, null, null)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(MergeTrainModal);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"reactstrap\";\nimport { getTrainDescription } from \"../../utils/utils\";\nimport { Helmet } from \"react-helmet\";\nimport Config from \"../../Config\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"../../style/searchStyle.module.css\";\nimport LocalTime from \"../fragments/LocalTime\";\nimport EditTrainModal from \"../modals/EditTrainModal\";\nimport EditScheduleModal from \"../modals/EditScheduleModal\";\nimport NewTrainStopModal from \"../modals/NewTrainStopModal\";\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  Snackbar,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n} from \"@material-ui/core\";\nimport DeleteScheduleModal from \"../modals/DeleteScheduleModal\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport DeleteTrainModal from \"../modals/DeleteTrainModal\";\nimport { Link } from \"react-router-dom\";\nimport MergeTrainModal from \"../modals/MergeTrainModal\";\n\nclass TrainSchedule extends Component {\n  state = {\n    trainLoading: true,\n    scheduleLoading: true,\n    train: {},\n    stops: [],\n    editStopData: {\n      id: \"\",\n      ah: \"\",\n      am: \"\",\n      dh: \"\",\n      dm: \"\",\n      platform: \"\",\n      station: \"\",\n      train: \"\",\n    },\n    deleteStopData: {\n      id: \"\",\n      stationName: \"\",\n      trainName: \"\",\n    },\n    confirmationMsg: null,\n    confirmationCb: null,\n    showEditModal: false,\n    showEditTrainModal: false,\n    showAddStopModal: false,\n    showDeleteStopModal: false,\n    showDeleteTrainModal: false,\n    showMergeTrainModal:false,\n    anchorEl: null,\n    menuStop: null,\n    alert: {\n      open: false,\n      text: \"\",\n      level: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    axios.get(`${Config.API_HOST}/api/train/${id}`).then((response) => {\n      this.setState({\n        train: response.data,\n        trainLoading: false,\n      });\n    });\n    axios\n      .get(`${Config.API_HOST}/api/schedule/train/${id}`)\n      .then((response) => {\n        this.setState({\n          stops: response.data,\n          scheduleLoading: false,\n        });\n      });\n  }\n\n  toggleEditTrainModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showEditTrainModal: isOpen,\n    });\n  };\n\n  showEditTrainStopModal = (visible) => {\n    this.setState({\n      showEditModal: visible,\n    });\n  };\n  showDeleteStopModal = (visible) => {\n    this.setState({\n      showDeleteStopModal: visible,\n    });\n  };\n\n  render() {\n    let { scheduleLoading, trainLoading } = this.state;\n    let body;\n    let trainDescription = getTrainDescription(\n      this.state.train.name,\n      this.state.train.startStation,\n      this.state.train.endStation\n    );\n    let title =\n      \"Schedule of \" + trainDescription + \" Train | Trains - Sri Lanka\";\n    let description =\n      \"The list of stations the train stops, the days of week the train runs, the type of the train\" +\n      trainDescription + \" and the classes available\";\n    if (scheduleLoading || trainLoading) {\n      body = <CircularProgress className={styles.centerScreen} />;\n    } else {\n      let id = 0;\n      let stops = this.state.stops.map((stop) => {\n        let arrival = \"N/A\";\n        let departure = \"N/A\";\n        id++;\n        if (stop.stationId !== this.state.train.startSt) {\n          arrival = <LocalTime hour={stop.ah} min={stop.am} />;\n        }\n        if (stop.stationId !== this.state.train.endSt) {\n          departure = <LocalTime hour={stop.dh} min={stop.dm} />;\n        }\n        return (\n          <Grid item xs={12} sm={6} md={4} key={stop.id}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\">#{id}</Typography>\n                <Typography variant=\"h5\" gutterBottom>\n                  {stop.stationName}\n                </Typography>\n                <Typography variant=\"body1\">Arrival : {arrival}</Typography>\n                <Typography variant=\"body1\">Departure : {departure}</Typography>\n                <Typography variant=\"body1\">\n                  {stop.platform ? `Platform: ${stop.platform}` : \"\"}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Link to={`/schedule/station/${stop.stationName}`}>\n                  <Button variant=\"contained\" color=\"primary\" size=\"small\">\n                    Schedule\n                  </Button>\n                </Link>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  aria-haspopup=\"true\"\n                  aria-controls=\"simple-menu\"\n                  size=\"small\"\n                  onClick={(event) => this.handleMenuBtnClick(event, stop)}\n                >\n                  More..\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        );\n      });\n\n      let editTrainData = {\n        id: this.state.train.id,\n        name: this.state.train.name,\n        avbValue: this.state.train.avbValue,\n        type: this.state.train.type,\n        classes: this.state.train.classes,\n        startSt: this.state.train.startSt,\n        endSt: this.state.train.endSt,\n      };\n      body = (\n        <>\n          <Grid container spacing={1} direction=\"column\">\n            <h3 className=\"p-2 text-center\">\n              Train Schedule : {trainDescription}\n            </h3>\n            <div>\n              <Typography variant=\"body1\">\n                Runs on : {this.state.train.avb}\n              </Typography>\n              <Typography variant=\"body1\">\n                Type : {this.state.train.type}\n              </Typography>\n              <Typography variant=\"body1\">\n                Classes : {this.state.train.classes}\n              </Typography>\n            </div>\n            <Grid container item justify=\"flex-start\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                className=\"mb-1 mr-1\"\n                onClick={this.toggleAddNewStop}\n              >\n                Add a missing stop\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                className=\"mb-1 mr-1\"\n                onClick={this.toggleEditTrainModal}\n              >\n                Edit Train\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                className=\"mb-1 mr-1\"\n                onClick={this.toggleMergeModal}\n              >\n                Merge Connecting Train\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                className=\"mb-1 mr-1\"\n                onClick={this.toggleDeleteTrain}\n              >\n                Delete Train\n              </Button>\n            </Grid>\n            <Grid container item spacing={1}>\n              {stops}\n            </Grid>\n          </Grid>\n          <EditScheduleModal\n            isOpen={this.state.showEditModal}\n            setOpen={this.toggleEditModal}\n            trainStop={this.state.editStopData}\n          />\n          <EditTrainModal\n            isOpen={this.state.showEditTrainModal}\n            setOpen={this.toggleEditTrainModal}\n            train={editTrainData}\n            stops={this.state.stops}\n          ></EditTrainModal>\n          <NewTrainStopModal\n            isOpen={this.state.showAddStopModal}\n            setOpen={this.toggleAddStopModal}\n            trainId={this.props.match.params.id}\n          />\n          <DeleteTrainModal\n            isOpen={this.state.showDeleteTrainModal}\n            setOpen={this.toggleDeleteTrainModal}\n            trainId={this.props.match.params.id}\n          />\n          <DeleteScheduleModal\n            isOpen={this.state.showDeleteStopModal}\n            setOpen={this.toggleDeleteModal}\n            trainStopId={this.state.deleteStopData.id}\n            trainName={this.state.deleteStopData.trainName}\n            stationName={this.state.deleteStopData.stationName}\n          />\n          <MergeTrainModal\n          isOpen={this.state.showMergeTrainModal}\n          setOpen={this.toggleMergeModal}\n          trainId={this.props.match.params.id}\n          />\n          <Menu\n            id=\"actions-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleMenuClose}\n          >\n            <MenuItem\n              onClick={() => {\n                this.editStop(\n                  this.state.menuStop.id,\n                  this.state.menuStop.ah,\n                  this.state.menuStop.am,\n                  this.state.menuStop.dh,\n                  this.state.menuStop.dm,\n                  this.state.menuStop.platform,\n                  this.state.menuStop.stationName,\n                  this.state.train\n                );\n                this.handleMenuClose();\n              }}\n            >\n              Edit Time or Platform\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                this.deleteStop(\n                  this.state.menuStop.id,\n                  this.state.menuStop.stationName,\n                  this.state.menuStop.trainName\n                );\n                this.handleMenuClose();\n              }}\n            >\n              Delete\n            </MenuItem>\n          </Menu>\n          <Snackbar\n            open={this.state.alert.open}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n            autoHideDuration={5000}\n            onClose={this.handleClose}\n          >\n            <MuiAlert\n              elevation={6}\n              varient=\"filled\"\n              onclose={this.handleClose}\n              severity={this.state.alert.level}\n            >\n              {this.state.alert.text}\n            </MuiAlert>\n          </Snackbar>\n        </>\n      );\n    }\n\n    return (\n      <Container className=\"App Container\">\n        <Helmet>\n          <title>{title}</title>\n          <meta name=\"description\" content={description} />\n        </Helmet>\n        {body}\n      </Container>\n    );\n  }\n\n  toggleEditModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showEditModal: isOpen,\n    });\n  };\n\n  toggleDeleteModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showDeleteStopModal: isOpen,\n    });\n  };\n  toggleMergeModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showMergeTrainModal: isOpen,\n    });\n  };\n  toggleAddStopModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showAddStopModal: isOpen,\n    });\n  };\n\n  toggleDeleteTrainModal = (isOpen, alert, level) => {\n    let alertOb = {\n      ...this.state.alert,\n    };\n    if (alert) {\n      alertOb = {\n        open: true,\n        text: alert,\n        level: level ? level : \"info\",\n      };\n    }\n    this.setState({\n      alert: alertOb,\n      showDeleteTrainModal: isOpen,\n    });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({\n      alert: {\n        open: false,\n      },\n    });\n  };\n\n  handleMenuBtnClick = (event, stop) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      menuStop: stop,\n    });\n  };\n\n  handleMenuClose = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n\n  toggleAddNewStop = () => {\n    this.setState({\n      showAddStopModal: !this.state.showAddStopModal,\n    });\n  };\n\n  toggleDeleteTrain = () => {\n    this.setState({\n      showDeleteTrainModal: !this.state.showDeleteTrainModal,\n    });\n  };\n\n  toggleConfirmation = () => {\n    this.setState({\n      confirmationMsg: null,\n    });\n  };\n\n  editStop = (id, ah, am, dh, dm, platform, station, train) => {\n    this.setState({\n      editStopData: {\n        id,\n        ah,\n        am,\n        dh,\n        dm,\n        platform,\n        station,\n        train,\n      },\n      showEditModal: true,\n    });\n  };\n\n  deleteStop = (id, stationName, trainName) => {\n    this.setState({\n      deleteStopData: {\n        id: id,\n        stationName: stationName,\n        trainName: trainName,\n      },\n      showDeleteStopModal: true,\n    });\n  };\n\n  onTrainStopUpdated(id, ah, am, dh, dm, platform) {\n    let stops = this.state.stops;\n    stops.forEach(function (stop) {\n      if (stop.id === id) {\n        stop.ah = ah;\n        stop.am = am;\n        stop.dh = dh;\n        stop.dm = dm;\n        stop.platform = platform;\n      }\n    });\n    this.setState({\n      stops: stops,\n    });\n  }\n\n  onTrainUpdated(id, name, avb, classes, type) {\n    let { train } = this.state;\n    train.name = name;\n    train.avb = avb;\n    train.classes = classes;\n    train.type = type;\n    this.setState({ train });\n  }\n\n  refresh = () => {\n    window.location.reload();\n  };\n\n  toggleEditStop() {\n    this.setState({\n      showEditModal: !this.state.showEditModal,\n    });\n  }\n}\n\nexport default TrainSchedule;\n","export const timeDuration = (duration) => {\n  let hrs = (duration / 60) >> 0;\n  let mins = duration % 60;\n  let result = `${hrs > 0 ? hrs + \"h \" : \"\"}${mins}m`;\n  return result;\n}\n","import React from \"react\";\nimport style from \"../../style/searchStyle.module.css\";\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\nimport { timeDuration } from \"../fragments/TimeDuration\";\n\nexport default function TrainTransit({ station, waitTime }) {\n  return (\n    <div>\n      <hr />\n      <div className={style.switchAt}>\n        <p>\n          <DirectionsWalkIcon />\n          Switch at {station} (Wait time: {timeDuration(waitTime)})\n        </p>\n      </div>\n      <hr />\n    </div>\n  );\n}\n","import React from \"react\";\nimport style from \"../../style/searchStyle.module.css\";\nimport LocalTime from \"../fragments/LocalTime\";\nimport TrainIcon from \"@material-ui/icons/Train\";\n\nexport default function TrainTravel({ train, from, to }) {\n  let trainUrl = `/schedule/train/${train.id}`;\n  let fromStationUrl = `/schedule/station/${from.station}`;\n  let toStationUrl = `/schedule/station/${to.station}`;\n\n  const getTrainDesc = (name, from, to) => {\n    let displayName = `${from} → ${to}`;\n    if (name) {\n      displayName = `${name} (${displayName})`;\n    }\n    return displayName;\n  }\n  return (\n    <div className={style.resultHop}>\n      <div className={style.trainTravel}>\n        <div>\n          <TrainIcon />\n          <a href={trainUrl}>\n            {`${getTrainDesc(train.name, train.startStation, train.endStation)} `} \n            Train\n          </a>\n        </div>\n      </div>\n      <div className={style.stations}>\n        <div className={style.station}>\n          <p>\n            <a href={fromStationUrl}>{from.station}</a>\n          </p>\n        </div>\n        <div className={style.station}>\n          <p>\n            <a href={toStationUrl}>{to.station}</a>\n          </p>\n        </div>\n      </div>\n      <div className={style.separator}>\n        <div className={style.nodeDot}></div>\n        <div className={style.straightLine}></div>\n        <div className={style.dashedLine}></div>\n        <div className={style.nodeDot}></div>\n      </div>\n      <div className={style.times}>\n        <div className={style.time}>\n          <LocalTime hour={from.hour} min={from.min} />\n        </div>\n        <div className={style.time}>\n          <LocalTime hour={to.hour} min={to.min} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport styles from \"../../style/searchStyle.module.css\";\nimport { timeDuration } from \"../fragments/TimeDuration\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport TrainTransit from \"./TrainTransit\";\nimport TrainTravel from \"./TrainTravel\";\n\nexport default function ResultItem({ id, trainTravels, transits, duration }) {\n  let components = [];\n  for (const [index, hop] of trainTravels.entries()) {\n    if (index > 0) {\n      let transit = (\n        <TrainTransit\n          station={transits[index - 1].station}\n          waitTime={transits[index - 1].waitTime}\n        />\n      );\n      components.push(transit);\n    }\n    let hopItem = <TrainTravel train={hop.train} from={hop.from} to={hop.to} />;\n    components.push(hopItem);\n  }\n  components = components.map((component, index) => (\n    <div key={index} className={styles.resultItemBody}>\n      {component}\n    </div>\n  ));\n  return (\n    <Container className={styles.resultItem}>\n      <Row>\n        <Col md=\"1\" xs=\"12\">\n          <div className={styles.centerVertical}>\n            <Row>\n              <Col md=\"12\" xs=\"4\">\n                <h2>#{id}</h2>\n              </Col>\n              <Col md=\"12\" xs=\"4\">\n                <TimerIcon />\n                <p>\n                  {timeDuration(duration)}\n                </p>\n              </Col>\n              <Col md=\"12\" xs=\"4\">\n                <p>{trainTravels.length} Trains</p>\n              </Col>\n            </Row>\n          </div>\n        </Col>\n        <Col md=\"11\">\n          <Container>{components}</Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { Component } from \"react\";\nimport ResultItem from \"./ResultItem\";\nimport axios from \"axios\";\nimport { Container } from \"reactstrap\";\nimport Config from \"../../Config\";\nimport { Helmet } from \"react-helmet\";\nimport styles from \"../../style/searchStyle.module.css\";\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from '@material-ui/lab/Alert'\n\nclass SearchResults extends Component {\n  state = {\n    loading: true,\n    error: null,\n    results: [],\n  };\n\n  componentDidMount() {\n    const { from, to, date, time } = this.props.match.params;\n    let url = `${Config.API_HOST}/api/search/from/${from}/to/${to}`;\n    url = time ? `${url}/${time}/onward` : url;\n    url = date ? `${url}/on/${date}` : url;\n    axios\n      .get(url)\n      .then((response) => {\n        this.setState({\n          results: response.data,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          error: error,\n          loading: false,\n        });\n      });\n  }\n\n  render() {\n    let body;\n    const { from, to, date, time } = this.props.match.params;\n    let title = `Train schedule from ${from} to ${to} | Trains - Sri Lanka`;\n    let description = `Train schedule from ${from} to ${to} with the train details, where to switch trains, and journey times`;\n    if (this.state.loading) {\n      body = <CircularProgress className={styles.centerScreen} />;\n    } else {\n      let resultItems = this.state.results.map((result) => (\n        <ResultItem\n          key={result.number}\n          id={result.number}\n          trainTravels={result.trainHops}\n          transits={result.transits}\n          duration={result.duration}\n        />\n      ));\n      let dateTimeString = date\n        ? `on ${moment(date, \"YYYY-MM-DD\").format(\"dddd, MMMM Do YYYY\")}`\n        : \"today\";\n      dateTimeString = time ? `${dateTimeString}, ${time} onwards` : \"from now\";\n      body = (\n        <>\n          <h2 className={`${styles.center} ${styles.pageHead}`}>\n            {from} to {to}\n          </h2>\n          <h6 className={styles.center}>{dateTimeString}</h6>\n          <Alert severity=\"info\">You can view Train/Station schedules by clicking the train/station name. If any data is wrong, help us correct those by choosing edit options at those relevant pages.</Alert>\n          {resultItems}\n        </>\n      );\n    }\n    return (\n      <Container>\n        <Helmet>\n          <title>{title}</title>\n          <meta name=\"description\" content={description} />\n        </Helmet>\n        {body}\n      </Container>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport styles from \"../style/searchStyle.module.css\";\n\nexport default function NotFound() {\n  return (\n    <div className={styles.centerMessage}>\n      <h2>404 - Not Found</h2>\n      <p>The URL you requested is not available in this site</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport styles from \"../style/searchStyle.module.css\";\n\nexport default function About() {\n  return (\n    <Container>\n      <h1 className={`${styles.center} ${styles.pageHead}`}>\n        Trains Sri Lanka\n      </h1>\n      <p>\n        Train Sri Lanka helps you to smartly search trains in Sri Lanka and view\n        the timetables of both trains and stations. It gives you the list of\n        options that you can travel between any two stations.\n      </p>\n      <hr/>\n      <h2>Features</h2>\n      <ul>\n        <li>\n          Search for trains between any two stations in Sri Lanka at any\n          date/time.\n        </li>\n        <li>View full time table of any train or station</li>\n        <li>\n          View telephone numbers of all major stations in case you need any\n          additional information\n        </li>\n        <li>Suggest ammendments to any wrong data, and review suggestions by others</li>\n      </ul>\n      <hr/>\n      <h2>Seeing Any Wrong Data?</h2>\n      <p>We are trying to keep the data up to date as much as possible. However, there might be cases where any new changes in the schedules may get time to reflect here. We are extremely sorry, if you had to face any inconveniece in such instance. </p>\n      \n      <p>\n        However, you can now suggest the new changes and get it reflected by yourself. At any of,</p>\n        <ul>\n          <li><a href=\"/stations\">Station list page</a></li>\n          <li>Station view page</li>\n          <li>Train view page</li>\n        </ul>\n        <p> you can find the options to suggest the changes to any data errors. The suggestions are listed to be <a href=\"/pendingChanges\">reviewed</a> by others and once a suggestion get a considerable amount of reviews, the change will automatically be applied.\n      </p>\n      <p>\n        The suggesters and the approvers will also get a reputation score upon\n        successful change. The reputation score is considered when approving the\n        suggestions (only less number of reputed voters will require to accept a\n        suggestion)\n      </p>\n      <hr/>\n      <h2>Contact Developers</h2>\n      <p>Please send a mail to <u>sltf-dev@googlegroups.com</u></p>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { votePendingChange } from \"../redux\";\nimport { connect } from \"react-redux\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\n\nfunction VoteRequestModal({\n  isOpen,\n  setOpen,\n  itemToVote,\n  vote,\n  authState,\n  votePendingChange,\n}) {\n  return (\n    itemToVote && (\n      <Modal isOpen={isOpen} toggle={() => setOpen(!isOpen, null, null)} zIndex={1300}>\n        <ModalHeader toggle={() => setOpen(!isOpen, null, null)}>Confirmation</ModalHeader>\n        <ModalBody>\n          <GoogleAuth></GoogleAuth>\n          {authState.isLoggedIn ? (\n            <p>\n              You're email {authState.userId} will be recorded to ensure no\n              multiple votes for same request from same user.\n            </p>\n          ) : (\n            \"\"\n          )}\n        </ModalBody>\n        <ModalFooter>\n          {authState.isLoggedIn ? (\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                votePendingChange(itemToVote, vote, authState);\n                setOpen(!isOpen, \"Vote Submitted!\",\"success\");\n              }}\n            >\n              {vote ? \"Upvote\" : \"Downvote\"}\n            </Button>\n          ) : (\n            \"\"\n          )}\n          <Button color=\"secondary\" onClick={() => setOpen(!isOpen, null, null)}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    )\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authState: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    votePendingChange: (itemToVote, vote, authState) =>\n      dispatch(votePendingChange(itemToVote, vote, authState)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoteRequestModal);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPendingChanges } from \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  CircularProgress,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Container,\n  Grid,\n  ButtonGroup,\n  Snackbar,\n} from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\nimport VoteRequestModal from \"../modals/VoteRequestModal\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles({\n  loadingContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  pageHead: {\n    textAlign: \"center\",\n    padding: \"10px\",\n  },\n  newValue: {\n    backgroundColor: \"#bbffbb\",\n  },\n  oldValue: {\n    backgroundColor: \"#ffbbbb\",\n    textDecoration: \"line-through\",\n  },\n});\n\nfunction ReviewList({\n  pendingChanges,\n  authData,\n  fetchPendingChanges,\n  location,\n}) {\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    let page = params.get(\"page\");\n    page = page ? page : 0;\n    fetchPendingChanges(authData, page);\n  }, []);\n\n  const [votingItem, setvotingItem] = useState(null);\n  const [vote, setVote] = useState(false);\n  const [isVoteModalOpen, setIsVoteModalOpen] = useState(false);\n  const [alert, setAlert] = useState({ open: false, level: \"\", text: \"\" });\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert({ ...alert, open: false });\n  };\n  const toggleVoteModal = (isOpen, alert, level) => {\n    setIsVoteModalOpen(isOpen);\n    if (alert) {\n      setAlert({\n        open: true,\n        level: level,\n        text: alert,\n      });\n    }\n  };\n\n  let body = \"\";\n  if (pendingChanges.loading) {\n    body = (\n      <div className={classes.loadingContainer}>\n        <CircularProgress />\n      </div>\n    );\n  } else if (pendingChanges.error) {\n    body = <h2>{pendingChanges.error}</h2>;\n  } else {\n    const params = new URLSearchParams(location.search);\n    let page = params.get(\"page\");\n    page = page ? page : 0;\n    let prevPage = -1;\n    let nextPage = -1;\n    if (page > 0) {\n      prevPage = page - 1;\n    }\n    if (pendingChanges.pendingChanges.length >= 15) {\n      nextPage = page + 1;\n    }\n    let changeRequests = pendingChanges.pendingChanges.map((changeRequest) => {\n      let itemsDisplay = \"\";\n      switch (changeRequest.action) {\n        case \"ADD\":\n          itemsDisplay = changeRequest.changes.map((change) => {\n            return (\n              <div key={change.id}>\n                {change.entityField} :{\" \"}\n                <span className={classes.newValue}>{change.newValue}</span>{\" \"}\n              </div>\n            );\n          });\n          break;\n        case \"MODIFY\":\n          itemsDisplay = changeRequest.changes.map((change) => {\n            return (\n              <div key={change.id}>\n                {change.entityField} updated to{\" \"}\n                <span className={classes.newValue}>{change.newValue}</span> from{\" \"}\n                <span className={classes.oldValue}>{change.oldValue}</span>\n                <hr />\n              </div>\n            );\n          });\n          break;\n        case \"DELETE\":\n          itemsDisplay = changeRequest.changes.map((change) => {\n            return (\n              <div key={change.id}>\n                {change.entityField} was{\" \"}\n                <span className={classes.oldValue}>{change.oldValue}</span>\n              </div>\n            );\n          });\n          break;\n        case \"MERGE\":\n          itemsDisplay = changeRequest.changes.map((change) => {\n            return (\n              <div key={change.id}>Will be merged with {change.newValue}</div>\n            );\n          });\n          break;\n        default:\n          break;\n      }\n\n      return (\n        <Grid item xs={12} sm={6} md={4} key={changeRequest.id}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                #{changeRequest.id} : {changeRequest.changes.length} change(s)\n              </Typography>\n\n              <Typography variant=\"body1\">\n                {changeRequest.action} {changeRequest.entityType}\n              </Typography>\n              <Typography variant=\"h5\">\n                {changeRequest.entityId > 0 ? changeRequest.entityName : \"\"}\n              </Typography>\n              <Typography color=\"textSecondary\" gutterBottom>\n                by {changeRequest.initiator}\n              </Typography>\n              <hr />\n              {itemsDisplay}\n            </CardContent>\n            <CardActions>\n              <Button\n                startIcon={<ThumbUpAltIcon />}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  setvotingItem(changeRequest.id);\n                  setVote(true);\n                  setIsVoteModalOpen(true);\n                }}\n              >\n                Upvote\n              </Button>\n              <Button\n                startIcon={<ThumbDownAltIcon />}\n                color=\"default\"\n                variant=\"contained\"\n                onClick={() => {\n                  setvotingItem(changeRequest.id);\n                  setVote(false);\n                  setIsVoteModalOpen(true);\n                }}\n              >\n                Downvote\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      );\n    });\n    body = (\n      <Container>\n        <h1 className={classes.pageHead}>Pending Changes List</h1>\n        <Grid direction={\"row\"} container spacing={2}>\n          <Grid container item xs={12} spacing={2} justify=\"center\">\n            <ButtonGroup>\n              <Button href={`?page=${prevPage}`} disabled={prevPage < 0}>\n                &lt;&lt; Previous\n              </Button>\n              <Button href={`?page=${nextPage}`} disabled={nextPage < 0}>\n                Next &gt;&gt;\n              </Button>\n            </ButtonGroup>\n          </Grid>\n          <Grid container item spacing={2}>\n            {changeRequests}\n          </Grid>\n        </Grid>\n        {isVoteModalOpen && (\n          <VoteRequestModal\n            setOpen={toggleVoteModal}\n            isOpen={isVoteModalOpen}\n            vote={vote}\n            itemToVote={votingItem}\n          ></VoteRequestModal>\n        )}\n        <Snackbar\n          open={alert.open}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          autoHideDuration={5000}\n          onClose={handleClose}\n        >\n          <MuiAlert\n            elevation={6}\n            varient=\"filled\"\n            onclose={handleClose}\n            severity={alert.level}\n          >\n            {alert.text}\n          </MuiAlert>\n        </Snackbar>\n      </Container>\n    );\n  }\n  return <div>{body}</div>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pendingChanges: state.pendingChanges,\n    authData: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPendingChanges: (authState, page) =>\n      dispatch(fetchPendingChanges(authState, page)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewList);\n","import React, {useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppHeader from \"./components/nav/AppHeader\";\nimport SearchPage from \"./components/search/SearchPage\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport StationList from \"./components/list/StationList\";\nimport NewTrain from \"./components/NewTrain\";\nimport StationSchedule from \"./components/schedule/StationSchedule\";\nimport TrainSchedule from \"./components/schedule/TrainSchedule\";\nimport SearchResults from \"./components/search/SearchResults\";\nimport NotFound from \"./components/NotFound\";\nimport About from \"./components/About\";\nimport ReviewList from \"./components/review/ReviewList\";\nimport ReactGA from \"react-ga\";\nimport Config from \"./Config\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const history = createBrowserHistory();\n  ReactGA.initialize(Config.GA_KEY);\n  history.listen((location) => {\n    ReactGA.pageview(location.pathname + location.search);\n  });\n\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname);\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Router history={history}>\n        <AppHeader />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n\n          <Switch>\n            <Route exact path=\"/\" component={SearchPage} />\n            <Route exact path=\"/stations\" component={StationList} />\n            <Route exact path=\"/review\" component={ReviewList} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/trains/new\" component={NewTrain} />\n            <Route\n              exact\n              path=\"/schedule/station/:name\"\n              component={StationSchedule}\n            />\n            <Route exact path=\"/schedule/train/:id\" component={TrainSchedule} />\n            <Route\n              exact\n              path=\"/schedule/from/:from/to/:to\"\n              component={SearchResults}\n            />\n            <Route\n              exact\n              path=\"/schedule/from/:from/to/:to/:time/onward\"\n              component={SearchResults}\n            />\n            <Route\n              exact\n              path=\"/schedule/from/:from/to/:to/:time/onward/on/:date\"\n              component={SearchResults}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_STATIONS_REQUEST,\n  FETCH_STATIONS_SUCCESS,\n  FETCH_STATIONS_FAILURE,\n  UPDATE_STATION_FAILURE,\n  UPDATE_STATION_REQUEST,\n  UPDATE_STATION_SUCCESS,\n} from \"./stationActionTypes\";\n\nconst initialState = {\n  loading: false,\n  stations: [],\n  error: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_STATIONS_REQUEST:\n    case UPDATE_STATION_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\",\n      };\n    case FETCH_STATIONS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        stations: action.payload,\n        error: \"\",\n      };\n    case UPDATE_STATION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n      };\n    case FETCH_STATIONS_FAILURE:\n    case UPDATE_STATION_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  UPDATE_TRAIN_FAILURE,\n  UPDATE_TRAIN_REQUEST,\n  UPDATE_TRAIN_SUCCESS,\n} from \"./trainActionTypes\";\n\nconst initialState = {\n  loading: false,\n  error: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TRAIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\",\n      };\n    case UPDATE_TRAIN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n      };\n    case UPDATE_TRAIN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { LOG_IN, LOG_OUT } from \"./userActionTypes\";\n\nconst initialState = {\n  isLoggedIn: false,\n  userId: null,\n  idToken: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        userId: action.payload.userId,\n        idToken: action.payload.idToken,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        userId: null,\n        idToken: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  FETCH_PENDING_CHANGES_REQUEST,\n  FETCH_PENDING_CHANGES_SUCCESS,\n  FETCH_PENDING_CHANGES_FAILURE,\n  VOTE_PENDING_CHANGE_REQUEST,\n  VOTE_PENDING_CHANGE_SUCCESS,\n  VOTE_PENDING_CHANGE_FAILURE,\n} from \"./pendingChangesActionTypes\";\n\nconst initialState = {\n  loading: false,\n  pendingChanges: [],\n  error: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PENDING_CHANGES_REQUEST:\n    case VOTE_PENDING_CHANGE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\",\n      };\n    case FETCH_PENDING_CHANGES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        pendingChanges: action.payload,\n        error: \"\",\n      };\n    case VOTE_PENDING_CHANGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n      };\n    case FETCH_PENDING_CHANGES_FAILURE:\n    case VOTE_PENDING_CHANGE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport stationsReducer from \"./stations/stationsReducer\";\nimport trainsReducer from \"./trains/trainReducer\";\nimport userReducer from \"./user/userReducer\";\nimport pendingChangesReducer from \"./pendingChanges/pendingChangesReducer\";\n\nconst rootReducer = combineReducers({\n  stations: stationsReducer,\n  trains: trainsReducer,\n  pendingChanges: pendingChangesReducer,\n  auth: userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger, thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./components/redux/store\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { orange } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1565c0\",\n      dark: \"#0d47a1\",\n      light: \"#90caf9\",\n    },\n    secondary: orange,\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}